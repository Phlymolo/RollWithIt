{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/chat/chat/chat.component.ts","./src/app/chat/chat/chat.component.html","./src/app/pages/dashboard/dashboard.component.ts","./src/app/pages/dashboard/dashboard.component.html","./src/app/pages/home/home.component.ts","./src/app/pages/home/home.component.html","./src/app/pages/login/login.component.ts","./src/app/pages/login/login.component.html","./src/app/pages/page-not-found/page-not-found.component.ts","./src/app/pages/page-not-found/page-not-found.component.html","./src/app/services/chat.service.ts","./src/app/test/test.component.ts","./src/main.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { HomeComponent } from './pages/home/home.component';\nimport { ChatComponent } from './chat/chat/chat.component';\nimport { LoginComponent } from './pages/login/login.component';\n\nconst routes: Routes = [\n  { path: '', component: HomeComponent },\n  // { path: 'login', component: LoginComponent },\n  { path: 'chat', component: ChatComponent },\n\n  //page not found\n  { path: '**', redirectTo: '' }\n\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'Client';\n}\n","<div class=\"app-container\">\r\n<router-outlet></router-outlet>\r\n</div>","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { TestComponent } from './test/test.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\nimport { ChatComponent } from './chat/chat/chat.component';\nimport { HomeComponent } from './pages/home/home.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\n//matertial\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from \"@angular/material/input\";\n\n\n//pages\nimport { LoginComponent } from './pages/login/login.component';\nimport { PageNotFoundComponent } from './pages/page-not-found/page-not-found.component';\nimport { DashboardComponent } from './pages/dashboard/dashboard.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    TestComponent,\n    ChatComponent,\n    HomeComponent,\n    LoginComponent,\n    PageNotFoundComponent,\n    DashboardComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule,\n    BrowserAnimationsModule,\n    MatButtonModule,\n    MatCardModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatFormFieldModule,\n    MatInputModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { MessageDto } from 'src/app/models/message-dto.model';\nimport { ChatService } from 'src/app/services/chat.service';\n\n@Component({\n  selector: 'app-chat',\n  templateUrl: './chat.component.html',\n  styleUrls: ['./chat.component.scss']\n})\nexport class ChatComponent implements OnInit  {\n\n  messages: MessageDto[] = [];\n\n  message: MessageDto = { user: 'TestUser', text: '' };\n\n  constructor(private chatService: ChatService) { }\n\n  ngOnInit(): void {\n    this.chatService.startConnection();\n\n    this.chatService.messageReceived$.subscribe((message: MessageDto) => {\n      this.messages.push(message);\n    });\n  }\n\n\n  sendMessage() {\n    this.chatService.sendChatMessage(this.message);\n    this.message.text = '';\n  }\n\n}\n","<div *ngFor=\"let message of messages\">\n  <p>{{ message.user }}: {{ message.text }}</p>\n</div>\n\n\n<div class=\"container\">\n    <div class=\"form-group\">\n      <input type=\"text\" [(ngModel)]=\"message.text\" class=\"form-control\">\n      <button (click)=\"sendMessage()\" class=\"btn btn-primary\">Send</button>\n    </div>\n  </div>","import { Component } from '@angular/core';\n\n@Component({\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss']\n})\nexport class DashboardComponent {\n\n}\n","<div class=\"page-container\">\n    <!-- login -->\n    <button mat-button routerLink=\"/login\">Login</button>\n\n\n    <h1>Roll With It</h1>\n\n    <div class=\"buttons\">\n        <button mat-raised-button>Create Campaign</button>\n        <button mat-raised-button>Join Campaign</button>\n        <button mat-raised-button>Load Campaign</button>\n        <button mat-raised-button>Design Campaign</button>\n    </div>\n\n    <div class=\"menu\">\n        <h3>\n            <button mat-button>\n                Settings\n            </button>\n        </h3>\n        \n\n        <h3>\n            <button mat-button>\n                Account\n            </button>\n        </h3>\n        \n    </div>\n</div>","import { Component } from '@angular/core';\n\n@Component({\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent {\n\n}\n","<div class=\"page-container\">\n    <h1>\n        Welcome to Roll With It\n    </h1>\n    <!-- <h4>\n        <button mat-button routerLink=\"/login\">Login</button>\n    </h4> -->\n    <div>\n        <app-login></app-login>\n    </div>\n\n\n</div>\n\n<hr>\n\n<div class=\"page-container\">\n    <h2>\n        What is Roll With It?\n    </h2>\n    <p>\n        Roll With It is a web application that allows you to create and manage your own tabletop roleplaying campaigns.\n    </p>\n</div>\n\n\n<hr>\n\n<div class=\"page-container\">\n    <h2>\n        How do I use Roll With It?\n    </h2>\n    <p>\n        Roll With It is a web application that allows you to create and manage your own tabletop roleplaying campaigns.\n    </p>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\n\n@Component({\n  selector: 'app-login', // <app-login></app-login>\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n\n  private formBuilder: FormBuilder = new FormBuilder();\n  public loginForm: FormGroup = this.formBuilder.group({\n    username: [''],\n    password: ['']\n  });\n\n  constructor() { }\n\n  ngOnInit(): void {}\n\n  public onSubmit(): void {\n    console.log(this.loginForm.value);\n  }\n  \n\n}\n","<!-- <div class=\"page-container\"> -->\n\n<mat-card>\n\n    <mat-card-header>\n        <mat-card-title>\n            <h4>Login</h4>\n        </mat-card-title>\n    </mat-card-header>\n\n    <mat-card-content>\n\n        <form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\">\n            <div class=\"login-fields\">\n                <mat-form-field>\n                    <input matInput placeholder=\"Username\" formControlName=\"username\">\n                </mat-form-field>\n                <mat-form-field>\n                    <input matInput placeholder=\"Password\" formControlName=\"password\">\n                </mat-form-field>\n                <button mat-raised-button color=\"primary\" type=\"submit\">Login</button>\n            </div>\n        </form>\n\n    </mat-card-content>\n\n\n</mat-card>\n\n\n<!-- \n</div> -->","import { Component } from '@angular/core';\n\n@Component({\n  templateUrl: './page-not-found.component.html',\n  styleUrls: ['./page-not-found.component.scss']\n})\nexport class PageNotFoundComponent {\n\n}\n","<p>page-not-found works!</p>\n","import { Injectable } from '@angular/core';\nimport * as signalR from '@microsoft/signalr';\nimport { MessageDto } from '../models/message-dto.model';\nimport { Subject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ChatService {\n\n  private hubConnection!: signalR.HubConnection;\n  private messageReceivedSubject = new Subject<MessageDto>();\n  messageReceived$ = this.messageReceivedSubject.asObservable();\n\n  public startConnection = () => {\n    // Create connection\n    this.hubConnection = new signalR.HubConnectionBuilder()\n      .withUrl('/chathub') \n      .build();\n\n    // Start connection\n    this.hubConnection\n      .start()\n      .then(() => console.log('Connection started'))\n      .catch(err => console.log('Error while starting connection: ' + err))\n\n    // Reconnect\n    this.hubConnection.onclose((err) => {\n      console.log(err);\n      this.hubConnection.start();\n    });\n\n    // Listen for messages\n    this.hubConnection.on('ReceiveMessage', (data) => {\n      console.log('recieved message',data);\n      this.messageReceivedSubject.next(data);\n    });\n  }\n\n  public addTransferChatDataListener = () => {\n    this.hubConnection.on('ReceiveMessage', (data) => {\n      console.log(data);\n    });\n  }\n\n\n  public sendChatMessage(message: MessageDto) {\n    this.hubConnection\n      .invoke('SendMessage', message)\n      .catch((err) => console.error(err));\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { catchError, map } from 'rxjs';\nimport { MessageDto } from '../models/message-dto.model';\n\n@Component({\n  selector: 'app-test',\n  templateUrl: './test.component.html',\n  styleUrls: ['./test.component.scss']\n})\nexport class TestComponent implements OnInit {\n\n  private baseUrl: string = \"api/Test\";  \n  public responseMessage: string = \"\";\n\n  constructor(private http: HttpClient) { }\n\n\n  ngOnInit() {\n    this.sendMessage();\n  }\n\n  sendMessage() {\n    const message: MessageDto = { text: \"hello\" };// \"hello\";// { text: 'Hello, server!' };\n    this.http.post(`${this.baseUrl}`, message, { responseType: 'text' }).pipe(\n      map((response) => this.responseMessage = response),\n      catchError((error) => this.responseMessage = error.message)\n    ).subscribe();\n  }\n\n\n}\n","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\n\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"names":["RouterModule","HomeComponent","ChatComponent","routes","path","component","redirectTo","AppRoutingModule","forRoot","imports","i1","exports","AppComponent","constructor","title","selectors","decls","vars","consts","template","AppComponent_Template","rf","ctx","i0","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","BrowserModule","TestComponent","HttpClientModule","FormsModule","BrowserAnimationsModule","MatButtonModule","MatCardModule","ReactiveFormsModule","MatFormFieldModule","MatInputModule","LoginComponent","PageNotFoundComponent","DashboardComponent","AppModule","bootstrap","declarations","ɵɵtext","ɵɵadvance","ɵɵtextInterpolate2","message_r1","user","text","chatService","messages","message","ngOnInit","startConnection","messageReceived$","subscribe","push","sendMessage","sendChatMessage","ɵɵdirectiveInject","ChatService","ChatComponent_Template","ɵɵtemplate","ChatComponent_div_0_Template","ɵɵlistener","ChatComponent_Template_input_ngModelChange_3_listener","$event","ChatComponent_Template_button_click_4_listener","ɵɵproperty","DashboardComponent_Template","HomeComponent_Template","FormBuilder","formBuilder","loginForm","group","username","password","onSubmit","console","log","value","LoginComponent_Template","LoginComponent_Template_form_ngSubmit_6_listener","PageNotFoundComponent_Template","signalR","Subject","messageReceivedSubject","asObservable","hubConnection","HubConnectionBuilder","withUrl","build","start","then","catch","err","onclose","on","data","next","addTransferChatDataListener","invoke","error","factory","ɵfac","providedIn","catchError","map","http","baseUrl","responseMessage","post","responseType","pipe","response","HttpClient","TestComponent_Template","styles","__NgCli_bootstrap_1","platformBrowser","bootstrapModule"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}