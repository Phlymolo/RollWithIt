{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/chat/chat/chat.component.ts","./src/app/chat/chat/chat.component.html","./src/app/services/chat.service.ts","./src/app/test/test.component.ts","./src/app/test/test.component.html","./src/main.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'Client';\n}\n","<app-test></app-test>\r\n\r\n<app-chat></app-chat>","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { TestComponent } from './test/test.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\nimport { ChatComponent } from './chat/chat/chat.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    TestComponent,\n    ChatComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { MessageDto } from 'src/app/models/message-dto.model';\nimport { ChatService } from 'src/app/services/chat.service';\n\n@Component({\n  selector: 'app-chat',\n  templateUrl: './chat.component.html',\n  styleUrls: ['./chat.component.scss']\n})\nexport class ChatComponent implements OnInit  {\n\n  messages: MessageDto[] = [];\n\n  message: MessageDto = { user: 'TestUser', text: '' };\n\n  constructor(private chatService: ChatService) { }\n\n  ngOnInit(): void {\n    this.chatService.startConnection();\n\n    this.chatService.messageReceived$.subscribe((message: MessageDto) => {\n      this.messages.push(message);\n    });\n  }\n\n\n  sendMessage() {\n    this.chatService.sendChatMessage(this.message);\n    this.message.text = '';\n  }\n\n}\n","<div *ngFor=\"let message of messages\">\n  <p>{{ message.user }}: {{ message.text }}</p>\n</div>\n\n\n<div class=\"container\">\n    <div class=\"form-group\">\n      <input type=\"text\" [(ngModel)]=\"message.text\" class=\"form-control\">\n      <button (click)=\"sendMessage()\" class=\"btn btn-primary\">Send</button>\n    </div>\n  </div>","import { Injectable } from '@angular/core';\nimport * as signalR from '@microsoft/signalr';\nimport { MessageDto } from '../models/message-dto.model';\nimport { Subject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ChatService {\n\n  private hubConnection!: signalR.HubConnection;\n  private messageReceivedSubject = new Subject<MessageDto>();\n  messageReceived$ = this.messageReceivedSubject.asObservable();\n\n  public startConnection = () => {\n    // Create connection\n    this.hubConnection = new signalR.HubConnectionBuilder()\n      .withUrl('/chathub') \n      .build();\n\n    // Start connection\n    this.hubConnection\n      .start()\n      .then(() => console.log('Connection started'))\n      .catch(err => console.log('Error while starting connection: ' + err))\n\n    // Reconnect\n    this.hubConnection.onclose((err) => {\n      console.log(err);\n      this.hubConnection.start();\n    });\n\n    // Listen for messages\n    this.hubConnection.on('ReceiveMessage', (data) => {\n      console.log('recieved message',data);\n      this.messageReceivedSubject.next(data);\n    });\n  }\n\n  public addTransferChatDataListener = () => {\n    this.hubConnection.on('ReceiveMessage', (data) => {\n      console.log(data);\n    });\n  }\n\n\n  public sendChatMessage(message: MessageDto) {\n    this.hubConnection\n      .invoke('SendMessage', message)\n      .catch((err) => console.error(err));\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { catchError, map } from 'rxjs';\nimport { MessageDto } from '../models/message-dto.model';\n\n@Component({\n  selector: 'app-test',\n  templateUrl: './test.component.html',\n  styleUrls: ['./test.component.scss']\n})\nexport class TestComponent implements OnInit {\n\n  private baseUrl: string = \"api/Test\";  \n  public responseMessage: string = \"\";\n\n  constructor(private http: HttpClient) { }\n\n\n  ngOnInit() {\n    this.sendMessage();\n  }\n\n  sendMessage() {\n    const message: MessageDto = { text: \"hello\" };// \"hello\";// { text: 'Hello, server!' };\n    this.http.post(`${this.baseUrl}`, message, { responseType: 'text' }).pipe(\n      map((response) => this.responseMessage = response),\n      catchError((error) => this.responseMessage = error.message)\n    ).subscribe();\n  }\n\n\n}\n","<p>Server response: {{ responseMessage }}</p>\n","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\n\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"names":["RouterModule","routes","AppRoutingModule","forRoot","imports","i1","exports","AppComponent","constructor","title","selectors","decls","vars","template","AppComponent_Template","rf","ctx","i0","ÉµÉµelement","BrowserModule","TestComponent","HttpClientModule","FormsModule","ChatComponent","AppModule","bootstrap","declarations","ÉµÉµelementStart","ÉµÉµtext","ÉµÉµelementEnd","ÉµÉµadvance","ÉµÉµtextInterpolate2","message_r1","user","text","chatService","messages","message","ngOnInit","startConnection","messageReceived$","subscribe","push","sendMessage","sendChatMessage","ÉµÉµdirectiveInject","ChatService","consts","ChatComponent_Template","ÉµÉµtemplate","ChatComponent_div_0_Template","ÉµÉµlistener","ChatComponent_Template_input_ngModelChange_3_listener","$event","ChatComponent_Template_button_click_4_listener","ÉµÉµproperty","signalR","Subject","messageReceivedSubject","asObservable","hubConnection","HubConnectionBuilder","withUrl","build","start","then","console","log","catch","err","onclose","on","data","next","addTransferChatDataListener","invoke","error","factory","Éµfac","providedIn","catchError","map","http","baseUrl","responseMessage","post","responseType","pipe","response","HttpClient","TestComponent_Template","ÉµÉµtextInterpolate1","__NgCli_bootstrap_1","platformBrowser","bootstrapModule"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}